[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Arcka\AppData\Local\Temp\idea2.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Arcka\AppData\Local\Temp\idea2.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.2 (Eclipse Foundation Java 11.0.12)
[debug]       Load.loadUnit: plugins took 69.37ms
[debug]       Load.loadUnit: defsScala took 0.2144ms
[debug] [Loading] Scanning directory C:\Users\Arcka\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Arcka\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 11.9353 ms
[debug]           Load.resolveProject(global-plugins) took 37.7291ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Arcka\.sbt\1.0\plugins, plugins: List(<none>))) took 72.3114ms
[debug] [Loading] Done in C:\Users\Arcka\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 88.0211ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.1595ms
[debug]     Load.loadUnit(file:/C:/Users/Arcka/.sbt/1.0/plugins/, ...) took 164.4487ms
[debug]   Load.apply: load took 287.7325ms
[debug]   Load.apply: resolveProjects took 4.5856ms
[debug]   Load.apply: finalTransforms took 42.2769ms
[debug]   Load.apply: config.delegates took 5.6086ms
[debug]   Load.apply: Def.make(settings)... took 280.2343ms
[debug]   Load.apply: structureIndex took 71.8396ms
[debug]   Load.apply: mkStreams took 1.5027ms
[info] loading global plugins from C:\Users\Arcka\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 1804.8673ms
[debug]           Load.loadUnit: plugins took 17.7993ms
[debug]           Load.loadUnit: defsScala took 0.0178ms
[debug] [Loading] Scanning directory C:\Users\Arcka\IdeaProjects\towerDefenceGame\project
[debug]             Load.loadUnit: mkEval took 7.1896ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Arcka\IdeaProjects\towerDefenceGame\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.8527 ms
[info] loading settings for project towerdefencegame-build from idea2.sbt ...
[debug]               Load.resolveProject(towerdefencegame-build) took 7.1648ms
[debug]             Load.loadTransitive: finalizeProject(Project(id towerdefencegame-build, base: C:\Users\Arcka\IdeaProjects\towerDefenceGame\project, plugins: List(<none>))) took 9.4153ms
[debug] [Loading] Done in C:\Users\Arcka\IdeaProjects\towerDefenceGame\project, returning: (towerdefencegame-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1616.6335ms
[debug]           Load.loadUnit: cleanEvalClasses took 3.8022ms
[debug]         Load.loadUnit(file:/C:/Users/Arcka/IdeaProjects/towerDefenceGame/project/, ...) took 1639.0611ms
[debug]       Load.apply: load took 1640.3065ms
[debug]       Load.apply: resolveProjects took 0.0874ms
[debug]       Load.apply: finalTransforms took 8.3386ms
[debug]       Load.apply: config.delegates took 0.5221ms
[debug]       Load.apply: Def.make(settings)... took 63.5708ms
[debug]       Load.apply: structureIndex took 18.5422ms
[debug]       Load.apply: mkStreams took 0.0019ms
[info] loading project definition from C:\Users\Arcka\IdeaProjects\towerDefenceGame\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 2834.8146ms
[debug]     Load.loadUnit: defsScala took 0.0034ms
[debug] [Loading] Scanning directory C:\Users\Arcka\IdeaProjects\towerDefenceGame
[debug]       Load.loadUnit: mkEval took 0.2604ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.3806 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 22.0179ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\Arcka\IdeaProjects\towerDefenceGame, plugins: List(<none>))) took 24.5708ms
[debug] [Loading] Done in C:\Users\Arcka\IdeaProjects\towerDefenceGame, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 735.9321ms
[debug]     Load.loadUnit: cleanEvalClasses took 6.3986ms
[debug]   Load.loadUnit(file:/C:/Users/Arcka/IdeaProjects/towerDefenceGame/, ...) took 3577.7417ms
[debug] Load.apply: load took 3578.9593ms
[debug] Load.apply: resolveProjects took 0.0641ms
[debug] Load.apply: finalTransforms took 17.4801ms
[debug] Load.apply: config.delegates took 0.2342ms
[debug] Load.apply: Def.make(settings)... took 45.2246ms
[debug] Load.apply: structureIndex took 17.7617ms
[debug] Load.apply: mkStreams took 0.0017ms
[info] set current project to towerDefenceGame (in build file:/C:/Users/Arcka/IdeaProjects/towerDefenceGame/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 63207 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 63207, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to towerDefenceGame (in build file:/C:/Users/Arcka/IdeaProjects/towerDefenceGame/)
[debug] > Exec(idea-shell, None, None)
